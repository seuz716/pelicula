{"version":3,"sources":["app/componentes/DetalleActores.js","app/componentes/DetalleGeneral.js","app/config/config.js","app/services/PeliculasService.js","app/componentes/DetalleNominaciones.js","app/paginas/DetallePelicula.js","app/componentes/Resultado.js","app/paginas/ResultadosBusqueda.js","app/componentes/Header.js","app/paginas/Login.js","app/services/UsuariosService.js","app/componentes/FormActores.js","app/componentes/FormGeneral.js","app/componentes/ListarPeliculas.js","app/paginas/AdministrarPeliculas.js","app/routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["DetalleActores","props","className","actores","map","actor","key","nombre","apellido","DetalleGeneral","titulo","datos","dato","URL_API","getToken","JSON","parse","localStorage","getItem","token","servicioBusquedaId","id","fetch","method","mode","then","respuesta","ok","json","Promise","reject","statusText","catch","error","console","log","DetalleNominaciones","cantidad","ganadas","DetallePelicula","useState","pelicula","setPelicula","useParams","useEffect","PeliculasService","data","alt","src","poster","ano","rating","clasificacion","sinopsis","generos","idiomas","paises","nominaciones","directores","type","Resultado","history","useHistory","onClick","evento","push","_id","icon","faStarHalfAlt","ResultadosBusqueda","busqueda","setBusqueda","resultados","setResultados","length","status","peliculas","name","onChange","preventDefault","stopPropagation","tituloPelicula","target","value","resultado","index","toString","Header","handleClick","removeItem","autenticado","usuario","children","Login","setUsuario","clave","setClave","handleChange","htmlFor","clas","UsuariosService","resultadoUsuario","datosUsuario","roles","setItem","stringify","FormActores","FormGeneral","etiqueta","setEtiqueta","actualizarDatos","filter","idx","parseInt","ListarPeliculas","setPeliculas","idPelicula","path","config","headers","resultadoEliminar","acknowledged","alert","resultadoBusqueda","AdministrarPeliculas","setId","setTitulo","setAno","setRating","setPoster","setClasificacion","tipo","setTipo","setSinopsis","setActores","setGeneros","setIdiomas","setPaises","setDirectores","setNominaciones","handleClickActores","nuevosActores","handleChangeActores","split","pop","propiedad","shift","handleChangeNominaciones","datosPelicula","body","resultadoActualizar","respuestaCrear","Routes","auth","exact","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b0f71c0.chunk.js","sourcesContent":["import \"../css/detallesVarios.css\";\r\n/*\r\n    [\r\n        {nombre: \"xxx\", apellido: \"yyy\"},\r\n        {nombre: \"xxx\", apellido: \"yyy\"},\r\n        {nombre: \"xxx\", apellido: \"yyy\"}\r\n    ]\r\n*/\r\n\r\nexport default function DetalleActores(props){\r\n    return (\r\n        <>\r\n            <fieldset className=\"detalles\">\r\n                <legend>Actores</legend>\r\n                <ul>\r\n                    {props.actores && props.actores.map((actor,key) => (\r\n                        <li key={key}>{actor.nombre} {actor.apellido}</li>\r\n                    ))}\r\n                </ul>\r\n            </fieldset>\r\n        </>\r\n    )\r\n}","/*\r\n    titulo=\"Géneros\",\r\n    datos = [\r\n        \"Acción\",\r\n        \"Drama\"\r\n    ]\r\n*/\r\n\r\nexport default function DetalleGeneral(props){\r\n\r\n    return(\r\n        <>\r\n            <fieldset className=\"detalles\">\r\n                <legend>{props.titulo}</legend>\r\n                <ul>\r\n                    {props.datos && props.datos.map((dato, key) => (\r\n                        <li key={key}>{dato}</li>\r\n                    ))}\r\n                </ul>\r\n            </fieldset>\r\n        </>\r\n    );\r\n\r\n}","export const URL_API = 'http://localhost:3000/api';\r\n\r\nexport function getToken(){\r\n    const auth = JSON.parse(localStorage.getItem('auth'));\r\n    return auth.token; \r\n}","import { URL_API, getToken } from \"../config/config\";\r\n\r\nexport function servicioBusquedaTitulo(titulo){\r\n    /* \r\n        API FETCH.\r\n            REALIZAR CONEXIONES EXTERNAS USANDO AJAX.\r\n\r\n                -> URL / PATH.\r\n                -> CONFIGURACIÓN\r\n                    -> MÉTODO HTTP.\r\n                    -> HEADERS.\r\n                    -> MODE -> CORS.\r\n                    -> POST -> BODY.\r\n    */\r\n\r\n    const path = \"/peliculas/obtenerPeliculasPorTitulo/\" + titulo;\r\n\r\n    const config = {\r\n        method : \"GET\",\r\n        mode: \"cors\"\r\n    }\r\n    \r\n    // FETCH -> RETORNA UNA PROMESA. \r\n    return fetch(URL_API + path, config)\r\n        .then(function(respuesta){\r\n            if(respuesta.status === 200){\r\n                return respuesta.json();\r\n            }\r\n            else{\r\n                return Promise.reject(respuesta.statusText);\r\n            }\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport function servicioBusquedaId(id){\r\n    const path = \"/peliculas/obtenerPelicula/\" + id;\r\n\r\n    const config = {\r\n        method : \"GET\",\r\n        mode : \"cors\"\r\n    }\r\n\r\n    return fetch(URL_API + path, config)\r\n        .then(function(respuesta){\r\n            if(respuesta.ok){\r\n                return respuesta.json();\r\n            }\r\n            else{\r\n                return Promise.reject(respuesta.statusText);\r\n            }\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport function servicioBusquedaPeliculas(){\r\n\r\n    const path = \"/peliculas/obtenerPeliculas\";\r\n\r\n    const config = {\r\n        method : \"GET\",\r\n        mode : \"cors\",\r\n        headers:{\r\n            'authorization' : \"Bearer \" + getToken()\r\n        }\r\n    }\r\n\r\n    return fetch(URL_API + path, config)\r\n        .then(function(respuesta){\r\n            if(respuesta.ok){\r\n                return respuesta.json();\r\n            }\r\n            else{\r\n                return Promise.reject(respuesta.statusText);\r\n            }\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport function servicioCrearPelicula(pelicula){\r\n\r\n    const path = \"/peliculas/crearPelicula\";\r\n\r\n    const config = {\r\n        method : \"POST\",\r\n        mode : \"cors\",\r\n        headers : {\r\n            \"authorization\" : \"Bearer \" + getToken(),\r\n            \"content-type\" : \"application/json\" // TIPOS MIME.\r\n        },\r\n        body : JSON.stringify(pelicula)\r\n    }\r\n\r\n    return fetch(URL_API + path, config)\r\n        .then(function(respuesta){\r\n            if(respuesta.ok){\r\n                return respuesta.json();\r\n            }\r\n            else{\r\n                return Promise.reject(respuesta.statusText);\r\n            }\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport function servicioActualizarPelicula(id, pelicula){\r\n\r\n    const path = \"/peliculas/actualizarPelicula/\" + id;\r\n\r\n    const config = {\r\n        method : \"PUT\",\r\n        mode : \"cors\",\r\n        headers : {\r\n            \"authorization\" : \"Bearer \" + getToken(),\r\n            \"content-type\" : \"application/json\"\r\n        },\r\n        body : JSON.stringify(pelicula)\r\n    }\r\n\r\n    return fetch(URL_API + path, config)\r\n        .then(function(respuesta){\r\n            if(respuesta.ok){\r\n                return respuesta.json();\r\n            }\r\n            else{\r\n                return Promise.reject(respuesta.statusText);\r\n            }\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport function servicioEliminarPelicula(id){\r\n    \r\n    const path= \"/peliculas/eliminarPelicula?id=\" + id;\r\n\r\n    const config = {\r\n        method : \"DELETE\",\r\n        headers : {\r\n            \"authorization\" : \"Bearer \" + getToken()\r\n        },\r\n        mode : \"cors\"\r\n    }\r\n\r\n    return fetch(URL_API + path, config)\r\n        .then(function(respuesta){\r\n            if(respuesta.ok){\r\n                return respuesta.json();\r\n            }\r\n            else{\r\n                return Promise.reject(respuesta.statusText);\r\n            }\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n}","/*\r\n    titulo=\"Géneros\",\r\n    datos = {\r\n        \"cantidad\": xxx,\r\n        \"ganadas\": xxx\r\n    }\r\n*/\r\n\r\nexport default function DetalleNominaciones(props){\r\n\r\n    return(\r\n        <>\r\n            <fieldset className=\"detalles\">\r\n                <legend>{props.titulo}</legend>\r\n                {props.datos &&\r\n                    <ul>\r\n                        <li key={1}>Cantidad: {props.datos.cantidad}</li>\r\n                        <li key={2}>Ganadas: {props.datos.ganadas}</li>\r\n                    </ul>\r\n                }\r\n            </fieldset>\r\n        </>\r\n    );\r\n\r\n}","import { useParams } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DetalleActores from \"../componentes/DetalleActores\";\r\nimport DetalleGeneral from \"../componentes/DetalleGeneral\";\r\nimport * as PeliculasService from \"../services/PeliculasService\"\r\nimport \"../css/detallepagina.css\";\r\nimport DetalleNominaciones from \"../componentes/DetalleNominaciones\";\r\n\r\nexport default function DetallePelicula(){\r\n    const [pelicula, setPelicula] = useState({});\r\n    const { id } = useParams();\r\n    \r\n    useEffect(() => {\r\n        PeliculasService.servicioBusquedaId(id)\r\n            .then(function(datos){\r\n                setPelicula(datos.data);\r\n            })\r\n            .catch(function(error){\r\n                console.log(error);\r\n            })\r\n    }, [id]);\r\n\r\n    /*\r\n        useParams() -> Devuelvo todos los parámetros de la URL\r\n            -> http://localhost:3500/detalle/:id/:nombre/:apellido\r\n                {\r\n                    id : xxx,\r\n                    nombre : xxx,\r\n                    apellido : xxx\r\n                }\r\n        \r\n        DESESTRUCTURACIÓN DE UN OBJETO.\r\n            -> const { id, apellido } = useParams();\r\n            \r\n        ANALIZAR INTERFAZ.\r\n            -> 1. ID Película -> Parámetros de la URL.\r\n            -> 2. ESTADOS\r\n                -> ** pelicula.\r\n            -> 3. EFECTOS\r\n                -> Montaje.\r\n            -> 4. COMPONENTES\r\n                -> Actores. -> props -> Array de Objetos\r\n                -> Género/Países/Idiomas, etc. -> props: Array\r\n                -> Nominaciones -> props -> Objeto.\r\n    */\r\n    return(\r\n        <>\r\n            <div className=\"dv-main_detalle\">\r\n                <fieldset>\r\n                    <legend>Detalle Película</legend>\r\n                    <div className=\"dv-titulo_detalle\">\r\n                        <h1>{pelicula.titulo}</h1>\r\n                        <div className=\"dv-datos_detalle\">\r\n                            <div className=\"dv-poster_detalle\">\r\n                                <img alt=\"Póster\" src={pelicula.poster}></img>\r\n                            </div>\r\n                            <div>\r\n                                <fieldset className=\"contDatos\">\r\n                                    <legend>Año</legend>\r\n                                    <span>{pelicula.ano}</span>\r\n                                </fieldset>\r\n                                <fieldset className=\"contDatos\">\r\n                                    <legend>Rating</legend>\r\n                                    <span>{pelicula.rating}</span>\r\n                                </fieldset>\r\n                                <fieldset className=\"contDatos\">\r\n                                    <legend>Clasificación</legend>\r\n                                    <legend>{pelicula.clasificacion}</legend>\r\n                                </fieldset>\r\n                            </div>\r\n                            <div>\r\n                                <p>\r\n                                    {pelicula.sinopsis}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr></hr>\r\n                    <span>.....</span>\r\n                    <hr></hr>\r\n\r\n                    <fieldset className=\"contDatos\">\r\n                        <legend>Detalle</legend>\r\n                        <DetalleActores actores={pelicula.actores} />\r\n                        <div className=\"dv-general_detalle\">\r\n                            <DetalleGeneral titulo=\"Géneros\" datos={pelicula.generos} />\r\n                            <DetalleGeneral titulo=\"Idiomas\" datos={pelicula.idiomas} />\r\n                            <DetalleGeneral titulo=\"Países\" datos={pelicula.paises} />\r\n                            <DetalleNominaciones titulo=\"Nominaciones\" datos={pelicula.nominaciones} />\r\n                        </div>\r\n                        <DetalleGeneral titulo=\"Directores\" datos={pelicula.directores} />\r\n                    </fieldset>\r\n                </fieldset>\r\n\r\n                <div className=\"dv-button_detalle\">\r\n                    <button type=\"button\">Regresar</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    ); \r\n}","import { useHistory } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStarHalfAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../css/resultado.css\"\r\n\r\nexport default function Resultado(props){\r\n    let history = useHistory();\r\n\r\n    function handleClick(evento){\r\n        history.push(\"/detalle/\" + props.pelicula._id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"resumen\" onClick={handleClick} key={props.pelicula._id} >\r\n                <div className=\"resumen-img\">\r\n                    <img src={props.pelicula.poster} alt=\"Póster\"></img>\r\n                </div>\r\n                <div>\r\n                    <h1>{props.pelicula.titulo}</h1>\r\n                </div>\r\n                <div>\r\n                    <p>{props.pelicula.sinopsis}</p>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                        <FontAwesomeIcon icon={faStarHalfAlt} />\r\n                        {props.pelicula.rating}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport Resultado from \"../componentes/Resultado\";\r\nimport * as PeliculasService from \"../services/PeliculasService\"\r\nimport '../css/resultados.css';\r\n\r\nexport default function ResultadosBusqueda(){\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const [resultados, setResultados] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(busqueda.length >= 3){\r\n            PeliculasService.servicioBusquedaTitulo(busqueda)\r\n                .then(function(peliculas){\r\n                    setResultados(peliculas.data);\r\n                })\r\n                .catch(function(error){\r\n                    console.log(error);\r\n                })\r\n        }\r\n        else{\r\n            setResultados([]);\r\n        }\r\n    }, [busqueda]);\r\n\r\n    function handleChange(evento){\r\n        evento.preventDefault();\r\n        evento.stopPropagation();\r\n        let tituloPelicula = evento.target.value; \r\n        setBusqueda(tituloPelicula);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"busqueda\">\r\n                <fieldset>\r\n                    <legend>Buscar Película</legend>\r\n                    <div>\r\n                        <input type=\"text\" name=\"busqueda\" id=\"busqueda\" onChange={handleChange} />\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n            <div className=\"busqueda\">\r\n                <fieldset className=\"listado\">\r\n                    <legend>Listado Películas</legend>\r\n                    <div>\r\n                        <span>Mostrando resultados para: {busqueda}</span>\r\n                    </div>\r\n                    <div className=\"resultados\">\r\n                        {resultados && resultados.length > 0 && resultados.map((resultado,index) =>(\r\n                            <Resultado key={index.toString()} pelicula={resultado} />\r\n                        ))}\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n        </>\r\n    );\r\n}","import { useHistory } from 'react-router';\r\nimport '../css/header.css';\r\n\r\nexport default function Header(props){\r\n    let history = useHistory();\r\n\r\n    function handleClick(evento){\r\n        evento.preventDefault();\r\n        let {name} = evento.target;\r\n\r\n        if(name === \"btnIniciar\"){\r\n            history.push(\"/login\");\r\n        }\r\n        else{\r\n            localStorage.removeItem('auth');\r\n            props.autenticado(null);\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <header className=\"header\">\r\n                {props.usuario ? \r\n                    (\r\n                        <button type=\"button\"  className=\"btn btn-primary\" onClick={handleClick} name=\"btnCerrar\">Cerrar Sesión</button>\r\n                    )\r\n                    :\r\n                    (\r\n                        <button type=\"button\"  className=\"btn btn-primary\" onClick={handleClick} name=\"btnIniciar\">Iniciar Sesión</button>\r\n                    )\r\n                }\r\n            </header>\r\n            {props.children}\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport * as UsuariosService from \"../services/UsuariosService\";\r\nimport '../css/login.css';\r\n\r\n// Formik -> Manipular formularios.\r\n\r\nexport default function Login(props){\r\n    const [usuario, setUsuario] = useState('');\r\n    const [clave, setClave] = useState('');\r\n    let history = useHistory();\r\n\r\n    function handleChange(evento){\r\n        let {name, value} = evento.target;\r\n        \r\n        if(name === \"usuario\"){\r\n            setUsuario(value);\r\n        }\r\n        else{\r\n            setClave(value);\r\n        }\r\n    }\r\n\r\n    function handleClick(evento){\r\n        evento.preventDefault();\r\n        UsuariosService.servicioIniciarSesion(usuario, clave)\r\n            .then(function(resultadoUsuario){\r\n                if(resultadoUsuario.token){\r\n                    let datosUsuario = {\r\n                        \"nombre\" : resultadoUsuario.datos.nombre,\r\n                        \"roles\" : resultadoUsuario.datos.roles,\r\n                        \"token\" : resultadoUsuario.token\r\n                    }\r\n\r\n                    localStorage.setItem(\"auth\", JSON.stringify(datosUsuario) );\r\n                    \r\n                    props.autenticado(datosUsuario);\r\n\r\n                    history.push(\"/administrar\");\r\n                }\r\n            })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"text-center mt-5\">\r\n                <form className=\"inicioSesion\">\r\n                    <img className=\"imagen\" src=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/mejores-peliculas-2021-1640687462.jpg?crop=1.00xw:1.00xh;0,0&resize=980:*\"></img>\r\n                    <fieldset>\r\n                    <legend className=\"h3 mb-3 font-weight-normal\">Iniciar Sesión</legend>\r\n                     <div>\r\n                            <label className=\"sr-only\" htmlFor=\"usuario\">Usuario: </label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"usuario\" id=\"usuario\" onChange={handleChange} value={usuario} />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"sr-only\" htmlFor=\"clave\">Contraseña: </label>\r\n                         <input className=\"form-control\"  type=\"password\" name=\"clave\" id=\"clave\" onChange={handleChange} value={clave} />\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                            <button clas type=\"button\"  className=\"btn btn-lg btn-primary btn-block\" onClick={handleClick}>Iniciar Sesión</button>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div> \r\n        </>\r\n    )\r\n}","import { URL_API } from \"../config/config\";\r\n\r\nexport function servicioIniciarSesion(usuario, clave){\r\n\r\n    const path = \"/usuarios/iniciarSesion?usuario=\" + usuario + \"&clave=\" + clave;\r\n\r\n    const config = {\r\n        method : \"GET\",\r\n        mode : \"cors\"\r\n    };\r\n\r\n    return fetch(URL_API + path, config)\r\n        .then(function(respuesta){\r\n            if(respuesta.ok){\r\n                return respuesta.json();\r\n            }\r\n            else{\r\n                return Promise.reject(respuesta.statusText);\r\n            }\r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n}","export default function FormActores(props){\r\n    return(\r\n        <>\r\n            <div>\r\n                <div>\r\n                    <label htmlFor={\"nombre-\"+props.index}>Nombre: </label>\r\n                    <input type=\"text\" id={\"nombre-\"+props.index} name={\"nombre-\"+props.index} value={props.actor.nombre} onChange={props.onChange} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor={\"apellido-\"+props.index}>Apellido: </label>\r\n                    <input type=\"text\" id={\"apellido-\"+props.index} name={\"apellido-\"+props.index} value={props.actor.apellido} onChange={props.onChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" name=\"btnEliminar\" onClick={props.onClick} value={props.index}>Eliminar</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\n\r\nexport default function FormGeneral(props){\r\n    const [etiqueta, setEtiqueta] = useState('');\r\n\r\n    function handleChange(evento){\r\n        const {value} = evento.target;\r\n        setEtiqueta(value);\r\n    }\r\n\r\n    function handleClick(evento){\r\n        // setGeneros()\r\n        evento.preventDefault();\r\n        const { name, value } = evento.target;\r\n        if(name === \"btnAdicionar\"){\r\n            props.actualizarDatos(datos => (\r\n                [...datos, etiqueta]\r\n            ));\r\n            setEtiqueta('');\r\n        }\r\n        else{\r\n            props.actualizarDatos(datos => (\r\n                datos.filter( (dato, idx) => idx !== parseInt(value) )\r\n            ));\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n            <fieldset>\r\n                <legend>{props.titulo}</legend>\r\n                <div>\r\n                    <label htmlFor={props.id}>{props.titulo} : </label>\r\n                    <input type=\"text\" id={props.id} name={props.id} value={etiqueta} onChange={handleChange} />\r\n                    <button type=\"button\" onClick={handleClick} name=\"btnAdicionar\" >Adicionar {props.titulo}</button>\r\n                </div>\r\n                <div>\r\n                    {props.datos && props.datos.map((dato,idx) => (\r\n                        <button key={idx} type=\"button\" value={idx} name=\"btnEliminar\" onClick={handleClick}>{dato}</button>\r\n                    ))}\r\n                </div>\r\n\r\n            </fieldset>\r\n        </>\r\n    )\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport * as PeliculasService from \"../services/PeliculasService\";\r\n\r\nexport default function ListarPeliculas(props){\r\n    const [peliculas, setPeliculas] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        PeliculasService.servicioBusquedaPeliculas()\r\n            .then(function(resultadoBusqueda){\r\n                setPeliculas(resultadoBusqueda.data);\r\n            })\r\n    },[]);\r\n\r\n    function handleClick(evento){\r\n        const { name, value } = evento.target;\r\n        const idPelicula = value;\r\n        switch(name){\r\n            case 'btnEditar':\r\n                props.id(idPelicula);\r\n            break;\r\n\r\n            case 'btnEliminar':\r\n                PeliculasService.servicioEliminarPelicula(idPelicula)\r\n                    .then(function(resultadoEliminar){\r\n                        if(resultadoEliminar.datos.acknowledged){\r\n                            /*\r\n                                setEstados\r\n                                    -> VALOR CONCRETO\r\n                                    -> UNA FUNCIÓN.\r\n                            */\r\n                            setPeliculas(peliculas => (\r\n                                peliculas.filter(pelicula => pelicula._id !== idPelicula)\r\n                            ));\r\n                        }\r\n                        else{\r\n                            alert(\"Error al eliminar película\")\r\n                        }\r\n                    })\r\n                    .catch(function(error){\r\n                        console.log(error);\r\n                    });\r\n            break;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Película</th>\r\n                        <th>Año</th>\r\n                        <th>Rating</th>\r\n                        <th>Clasificación</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {peliculas && peliculas.map(pelicula => (\r\n                        <tr key={pelicula._id}>\r\n                            <td>{pelicula.titulo}</td>\r\n                            <td>{pelicula.ano}</td>\r\n                            <td>{pelicula.rating}</td>\r\n                            <td>{pelicula.clasificacion}</td>\r\n                            <td>\r\n                                <button type=\"button\" name=\"btnEditar\" onClick={handleClick} value={pelicula._id}>Editar</button>\r\n                                <button type=\"button\" name=\"btnEliminar\" onClick={handleClick} value={pelicula._id} >Eliminar</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport * as PeliculasService from \"../services/PeliculasService\";\r\nimport FormActores from \"../componentes/FormActores\";\r\nimport FormGeneral from \"../componentes/FormGeneral\";\r\nimport ListarPeliculas from \"../componentes/ListarPeliculas\";\r\n\r\nexport default function AdministrarPeliculas(){\r\n    const [id, setId] = useState('');\r\n    const [titulo, setTitulo] = useState('');\r\n    const [ano, setAno] = useState('');\r\n    const [rating, setRating] = useState('');\r\n    const [poster, setPoster] = useState('');\r\n    const [clasificacion, setClasificacion] = useState('');\r\n    const [tipo, setTipo] = useState('');\r\n    const [sinopsis, setSinopsis] = useState('');\r\n    const [actores, setActores] = useState([]);\r\n    const [generos, setGeneros] = useState([]);\r\n    const [idiomas, setIdiomas] = useState([]);\r\n    const [paises, setPaises] = useState([]);\r\n    const [directores, setDirectores] = useState([]);\r\n    const [nominaciones, setNominaciones ] = useState({cantidad:0, ganadas:0});\r\n\r\n    useEffect(()=>{\r\n        if(id){\r\n            PeliculasService.servicioBusquedaId(id)\r\n                .then(function(resultadoBusqueda){\r\n                    const pelicula = resultadoBusqueda.data;\r\n                    setTitulo(pelicula.titulo);\r\n                    setAno(pelicula.ano);\r\n                    setRating(pelicula.rating);\r\n                    setPoster(pelicula.poster);\r\n                    setClasificacion(pelicula.clasificacion);\r\n                    setTipo(pelicula.tipo);\r\n                    setSinopsis(pelicula.sinopsis);\r\n                    setActores(pelicula.actores);\r\n                    setGeneros(pelicula.generos);\r\n                    setIdiomas(pelicula.idiomas);\r\n                    setPaises(pelicula.paises);\r\n                    setDirectores(pelicula.directores);\r\n                    setNominaciones(pelicula.nominaciones);\r\n                })\r\n        }\r\n    }, [id])\r\n\r\n    function handleChange(evento){\r\n        const {name, value} = evento.target;\r\n        switch(name){\r\n            case 'titulo':\r\n                setTitulo(value);\r\n            break;\r\n\r\n            case 'ano':\r\n                setAno(value);\r\n            break;\r\n\r\n            case 'rating':\r\n                setRating(value);\r\n            break;\r\n            \r\n            case 'poster':\r\n                setPoster(value);\r\n            break;\r\n\r\n            case 'clasificacion':\r\n                setClasificacion(value);\r\n            break;\r\n\r\n            case 'tipo':\r\n                setTipo(value);\r\n            break;\r\n\r\n            case 'sinopsis':\r\n                setSinopsis(value);\r\n            break;\r\n        }\r\n    }\r\n\r\n    function handleClick(evento){\r\n        evento.preventDefault();\r\n        const datosPelicula = {\r\n            \"titulo\" : titulo,\r\n            \"ano\" : ano,\r\n            \"rating\" : rating,\r\n            \"clasificacion\" : clasificacion,\r\n            \"poster\" : poster,\r\n            \"tipo\" : tipo,\r\n            \"sinopsis\" : sinopsis,\r\n            \"actores\" : actores,\r\n            \"generos\" : generos,\r\n            \"paises\" : paises,\r\n            \"idiomas\" : idiomas,\r\n            \"directores\" : directores,\r\n            \"nominaciones\" : nominaciones \r\n        }\r\n\r\n        if(id){\r\n            PeliculasService.servicioActualizarPelicula(id, datosPelicula)\r\n                .then(function(resultadoActualizar){\r\n                    if(resultadoActualizar.datos.acknowledged){\r\n                        alert(\"Película actualizada correctamente...\");\r\n                        setTipo('');\r\n                        setTitulo('');\r\n                        setAno('');\r\n                        setRating('');\r\n                        setClasificacion('');\r\n                        setPoster('');\r\n                        setSinopsis('');\r\n                        setActores([]);\r\n                        setNominaciones({cantidad:0, ganadas:0});\r\n                        setPaises([]);\r\n                        setIdiomas([]);\r\n                        setGeneros([]);\r\n                        setDirectores([]);\r\n                        setId('');\r\n                    }\r\n                })\r\n                .catch(function(error){\r\n                    console.log(error)\r\n                })\r\n        }\r\n        else{\r\n            PeliculasService.servicioCrearPelicula(datosPelicula)\r\n                .then(function(respuestaCrear){\r\n                    if(respuestaCrear.resultado && typeof respuestaCrear.resultado === \"string\"){\r\n                        alert(\"Película creada correctamente...\");\r\n                        setTipo('');\r\n                        setTitulo('');\r\n                        setAno('');\r\n                        setRating('');\r\n                        setClasificacion('');\r\n                        setPoster('');\r\n                        setSinopsis('');\r\n                        setActores([]);\r\n                        setNominaciones({cantidad:0, ganadas:0});\r\n                        setPaises([]);\r\n                        setIdiomas([]);\r\n                        setGeneros([]);\r\n                        setDirectores([]);\r\n                    } \r\n                })\r\n                .catch(function(error){\r\n                    console.log(error);\r\n                })\r\n        }\r\n    }\r\n\r\n    function handleClickActores(evento){\r\n        /*\r\n            ADICIONAR ELEMENTOS A UN ARRAY.\r\n            1. push.\r\n            2. concat.\r\n            3. Clase Set\r\n            4. Operador Spread (...)\r\n        */\r\n       /*\r\n            actores = [1,2,3]\r\n            nuevosActores = [ actores, 4 ]\r\n                            [ [1,2,3], 4 ]\r\n            Operador Spread ...\r\n                          = [...actores, 4]\r\n                          = [1,2,3,4]\r\n            */\r\n        const { name, value } = evento.target;\r\n        if(name === \"btnEliminar\"){\r\n            setActores(actores => (\r\n                actores.filter( (actor, idx) => idx !== parseInt(value) )\r\n            ));\r\n        }\r\n        else{\r\n            const nuevosActores = [...actores, {nombre:\"\", apellido:\"\"}];\r\n            setActores(nuevosActores);\r\n        }\r\n    }\r\n\r\n    function handleChangeActores(evento){\r\n        /*\r\n            apellido-0.split(\"-\")\r\n             -> [apellido, 0]\r\n             -> index = 0\r\n             -> propiedad = apellido\r\n        */\r\n        const index = parseInt(evento.target.name.split(\"-\").pop());\r\n        const propiedad = evento.target.name.split(\"-\").shift();\r\n        const { value } = evento.target;\r\n        setActores(actores => (\r\n            actores.map((actor, idx) => {\r\n                if(idx === index){\r\n                    return {...actor, [propiedad] : value }\r\n                }\r\n                else{\r\n                    return {...actor}\r\n                }\r\n            })\r\n        ));\r\n    }\r\n\r\n    function handleChangeNominaciones(evento){\r\n        const { name, value } = evento.target;\r\n        setNominaciones(nominaciones => (\r\n            {...nominaciones, [name] : value }\r\n        ));\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                <fieldset>\r\n                    <legend>Administrar Películas</legend>\r\n                    <form>\r\n                        <fieldset>\r\n                            <legend>Datos Película</legend>\r\n                            <div>\r\n                                <label htmlFor=\"titulo\">Titulo: </label>\r\n                                <input type=\"text\" id=\"titulo\" name=\"titulo\" value={titulo} onChange={handleChange} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"ano\">Año: </label>\r\n                                <input type=\"text\" id=\"ano\" name=\"ano\" value={ano} onChange={handleChange} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"rating\">Rating: </label>\r\n                                <input type=\"text\" id=\"rating\" name=\"rating\" value={rating} onChange={handleChange} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"clasificacion\">Clasificación: </label>\r\n                                <input type=\"text\" id=\"clasificacion\" name=\"clasificacion\" value={clasificacion} onChange={handleChange} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"poster\">Póster: </label>\r\n                                <input type=\"text\" id=\"poster\" name=\"poster\" value={poster} onChange={handleChange} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"tipo\">Tipo: </label>\r\n                                <input type=\"text\" id=\"tipo\" name=\"tipo\" value={tipo} onChange={handleChange} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"sinopsis\">Sinopsis: </label>\r\n                                <textarea id=\"sinopsis\" name=\"sinopsis\" value={sinopsis} onChange={handleChange} ></textarea>\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <legend>Actores</legend>\r\n                            <button type=\"button\" onClick={handleClickActores}>Adicionar Actor</button>\r\n                            {actores && actores.map((actor,idx)=>(\r\n                                <FormActores\r\n                                    key={idx}\r\n                                    index={idx}\r\n                                    actor={actor}\r\n                                    onChange={handleChangeActores}\r\n                                    onClick={handleClickActores}\r\n                                />\r\n                            ))}\r\n                        </fieldset>\r\n                        <FormGeneral\r\n                            titulo=\"Géneros\"\r\n                            id=\"genero\"\r\n                            datos={generos}\r\n                            actualizarDatos={setGeneros}\r\n                        />\r\n                        <FormGeneral\r\n                            titulo=\"Idiomas\"\r\n                            id=\"idiomas\"\r\n                            datos={idiomas}\r\n                            actualizarDatos={setIdiomas}\r\n                        />\r\n                        <FormGeneral\r\n                            titulo=\"Países\"\r\n                            id=\"paises\"\r\n                            datos={paises}\r\n                            actualizarDatos={setPaises}\r\n                        />\r\n                        <FormGeneral\r\n                            titulo=\"Directores\"\r\n                            id=\"directores\"\r\n                            datos={directores}\r\n                            actualizarDatos={setDirectores}\r\n                        />\r\n                        <fieldset>\r\n                            <legend>Nominaciones</legend>\r\n                            <div>\r\n                                <label htmlFor=\"cantidad\">Cantidad: </label>\r\n                                <input type=\"text\" id=\"cantidad\" name=\"cantidad\" value={nominaciones.cantidad} onChange={handleChangeNominaciones} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"ganadas\">Ganadas: </label>\r\n                                <input type=\"text\" id=\"ganadas\" name=\"ganadas\" value={nominaciones.ganadas} onChange={handleChangeNominaciones} />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div>\r\n                            <button type=\"button\" onClick={handleClick}>Guardar</button>\r\n                        </div>\r\n                    </form>\r\n                    <ListarPeliculas\r\n                        id={setId}\r\n                    />\r\n                </fieldset>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router\";\r\nimport DetallePelicula from \"../paginas/DetallePelicula\";\r\nimport ResultadosBusqueda from \"../paginas/ResultadosBusqueda\";\r\nimport Header from \"../componentes/Header\";\r\nimport Login from \"../paginas/Login\";\r\nimport AdministrarPeliculas from \"../paginas/AdministrarPeliculas\";\r\nimport '../css/detallesVarios.css';\r\n\r\n/*\r\n    COMPONENTE ENVOLVENTES -> WRAP.\r\n    <COMPONENTE SUPERIOR> -> props.children.\r\n        <COMPONENTE INFERIOR>\r\n    </COMPONENTE SUPERIOR>\r\n*/\r\n\r\n// React Redux, Saga.\r\n\r\nexport function Routes(){\r\n    const auth = JSON.parse( localStorage.getItem('auth') );\r\n    const [usuario, setUsuario] = useState(auth);\r\n\r\n    return(\r\n        <Switch >\r\n           <div> \r\n            <Header usuario={usuario} autenticado={setUsuario}>\r\n                <Route exact path=\"/\" component={ResultadosBusqueda} />\r\n                <Route path=\"/detalle/:id\" component={DetallePelicula} />\r\n                <Route path=\"/administrar\">\r\n                    {usuario ? <AdministrarPeliculas /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                    <Login autenticado={setUsuario} />\r\n                </Route>\r\n            </Header>\r\n            </div>\r\n        </Switch>\r\n    );\r\n}","import React from \"react\";\r\nimport { Routes } from \"./app/routes/Routes\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n   \r\n      <Routes />\r\n   \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n\r\n\r\n    <BrowserRouter>\r\n      <React.StrictMode>\r\n         <App />\r\n      </React.StrictMode>\r\n    </BrowserRouter>, document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}